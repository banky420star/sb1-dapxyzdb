server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Trading application logs
  - job_name: trading-app
    static_configs:
      - targets:
          - localhost
        labels:
          job: trading-app
          service: ai-trading-system
          __path__: /var/log/trading/*.log
    pipeline_stages:
      # Parse JSON logs
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            service: service
            pid: pid
            hostname: hostname
      # Set timestamp from log entry
      - timestamp:
          source: timestamp
          format: RFC3339
      # Extract log level
      - labels:
          level:
          service:
          hostname:
      # Regex to extract additional fields from message
      - regex:
          expression: "(?P<operation>\\w+)\\s+(?P<symbol>[A-Z/]+)?\\s*(?P<amount>[0-9.]+)?"
          source: message
      # Add labels for filtering
      - labels:
          operation:
          symbol:

  # Trading performance logs
  - job_name: trading-performance
    static_configs:
      - targets:
          - localhost
        labels:
          job: trading-performance
          service: ai-trading-system
          log_type: performance
          __path__: /var/log/trading/performance.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            metrics: metrics
            duration: duration
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:

  # Trading error logs
  - job_name: trading-errors
    static_configs:
      - targets:
          - localhost
        labels:
          job: trading-errors
          service: ai-trading-system
          log_type: error
          __path__: /var/log/trading/error.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            error: error
            stack: stack
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:

  # Combined logs (fallback)
  - job_name: trading-combined
    static_configs:
      - targets:
          - localhost
        labels:
          job: trading-combined
          service: ai-trading-system
          log_type: combined
          __path__: /var/log/trading/combined.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            service: service
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          service:

  # Docker container logs (if running in Docker)
  - job_name: docker-trading
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["ai-trading-system"]
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)' 
        target_label: 'container_name'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'logstream'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'service'
    pipeline_stages:
      - cri: {}
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
      - labels:
          level:
          service:
          container_name:
          logstream: 