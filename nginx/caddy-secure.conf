# Secure Caddy Configuration for Production
# /etc/caddy/Caddyfile

{
    # Global settings
    admin off  # Disable admin interface for security
    
    # Rate limiting for TLS certificate requests
    on_demand_tls {
        rate_limit 10
        allowed_domains methtrader.xyz *.methtrader.xyz
    }
    
    # Security headers
    security {
        strict_transport_security max_age=31536000; include_subdomains
        content_security_policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss: https:; frame-ancestors 'none';"
        x_frame_options DENY
        x_content_type_options nosniff
        referrer_policy strict-origin-when-cross-origin
        permissions_policy "geolocation=(), microphone=(), camera=()"
    }
    
    # Logging
    log {
        output file /var/log/caddy/access.log
        format json
        level INFO
    }
}

# Admin endpoints on separate subdomain with mTLS
admin.methtrader.xyz {
    tls {
        client_auth {
            require_and_verify
        }
    }
    
    # Rate limiting for admin endpoints
    @admin {
        path /api/admin/*
    }
    handle @admin {
        rate_limit {
            zone admin
            events 100
            window 1m
        }
        reverse_proxy localhost:8000
    }
    
    # Health check endpoint (read-only)
    handle /health {
        reverse_proxy localhost:8000
    }
    
    # Metrics endpoint (read-only)
    handle /metrics {
        reverse_proxy localhost:8000
    }
}

# Main application domain
methtrader.xyz {
    # Standard security headers
    header {
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        X-Frame-Options "DENY"
        X-Content-Type-Options "nosniff"
        Referrer-Policy "strict-origin-when-cross-origin"
        Permissions-Policy "geolocation=(), microphone=(), camera=()"
        X-XSS-Protection "1; mode=block"
        X-DNS-Prefetch-Control "off"
        X-Download-Options "noopen"
        X-Permitted-Cross-Domain-Policies "none"
        X-Robots-Tag "noindex, nofollow"
    }
    
    # Rate limiting for API endpoints
    @api {
        path /api/*
    }
    handle @api {
        rate_limit {
            zone api
            events 1000
            window 1m
        }
        reverse_proxy localhost:8000
    }
    
    # Rate limiting for WebSocket connections
    @websocket {
        path /ws
    }
    handle @websocket {
        rate_limit {
            zone ws
            events 100
            window 1m
        }
        reverse_proxy localhost:8000
    }
    
    # Public endpoints (no rate limiting)
    @public {
        path /health /status /metrics
    }
    handle @public {
        reverse_proxy localhost:8000
    }
    
    # Frontend (static files)
    handle /* {
        root * /opt/ats/dist
        try_files {path} /index.html
        file_server
    }
}

# API subdomain for external access
api.methtrader.xyz {
    # Strict rate limiting for external API access
    @external_api {
        path /api/*
    }
    handle @external_api {
        rate_limit {
            zone external_api
            events 100
            window 1m
        }
        reverse_proxy localhost:8000
    }
    
    # Health check (public)
    handle /health {
        reverse_proxy localhost:8000
    }
    
    # Status endpoint (public)
    handle /status {
        reverse_proxy localhost:8000
    }
}

# Monitoring subdomain
monitoring.methtrader.xyz {
    # Grafana dashboard
    handle / {
        reverse_proxy localhost:3001
    }
    
    # Prometheus metrics
    handle /metrics {
        reverse_proxy localhost:9090
    }
}

# WebSocket subdomain for real-time data
ws.methtrader.xyz {
    # WebSocket connections
    handle / {
        reverse_proxy localhost:8000
    }
    
    # Rate limiting for WebSocket connections
    @ws_connections {
        path /ws
    }
    handle @ws_connections {
        rate_limit {
            zone ws_connections
            events 50
            window 1m
        }
        reverse_proxy localhost:8000
    }
}

# Error pages
(security_headers) {
    header {
        Strict-Transport-Security "max-age=31536000; includeSubDomains"
        X-Frame-Options "DENY"
        X-Content-Type-Options "nosniff"
        Referrer-Policy "strict-origin-when-cross-origin"
    }
}

# Custom error pages
@error_4xx {
    expression {http.error.status_code} >= 400 && {http.error.status_code} < 500
}
@error_5xx {
    expression {http.error.status_code} >= 500
}

handle @error_4xx {
    respond "Client Error: {http.error.status_code}" {http.error.status_code}
    import security_headers
}

handle @error_5xx {
    respond "Server Error: {http.error.status_code}" {http.error.status_code}
    import security_headers
} 